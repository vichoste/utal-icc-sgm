@using Microsoft.AspNetCore.Identity

@using Utal.Icc.Sgm
@using Utal.Icc.Sgm.Models
@using Utal.Icc.Sgm.ViewModels
@using Utal.Icc.Sgm.ViewModels.Shared

@model Paginator<ApplicationUserViewModel>

@inject UserManager<ApplicationUser> userManager

@{
	this.ViewData["Title"] = "Profesores";
}

<div class="container">
	<partial name="_Alerts" />
	<div class="row justify-content-center">
		<div class="col-12 col-md-10 mb-3">
			<h2>@this.ViewData["Title"]</h2>
		</div>
		<div class="col-12 col-md-2 mb-3">
			@this.Html.ActionLink("Crear profesor", "CreateTeacher", "User", new { area = "University" }, new { @class =
			"btn btn-success"})
		</div>
		<div class="col-12 mb-3">
			<partial name="_Filter" , model=@(new FilterPartialViewModel("Teacher", "User", "University")) />
		</div>
	</div>
	<div class="row justify-content-center">
		<div class="col-12">
			<div class="table-responsive">
				<table class="table table-bordered">
					<thead class="table-dark">
						<tr>
							<th>
								<a asp-action="Teacher" asp-route-sortOrder="@this.ViewData["FirstNameSortParam"]"
									asp-route-currentFilter="@this.ViewData["CurrentFilter"]">
									Nombre
								</a>
							</th>
							<th>
								<a asp-action="Teacher" asp-route-sortOrder="@this.ViewData["LastNameSortParam"]"
									asp-route-currentFilter="@this.ViewData["CurrentFilter"]">
									Apellido
								</a>
							</th>
							<th>
								<a asp-action="Teacher" asp-route-sortOrder="@this.ViewData["RutSortParam"]"
									asp-route-currentFilter="@this.ViewData["CurrentFilter"]">
									RUT
								</a>
							</th>
							<th>
								<a asp-action="Teacher" asp-route-sortOrder="@this.ViewData["EmailSortParam"]"
									asp-route-currentFilter="@this.ViewData["CurrentFilter"]">
									E-mail
								</a>
							</th>
							<th>Acciones</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in this.Model)
						{
							<tr>
								@if (item.IsDeactivated is true)
								{
									<td class="text-muted">@item.FirstName</td>
									<td class="text-muted">@item.LastName</td>
									<td class="text-muted">@item.Rut</td>
									<td class="text-muted">@item.Email</td>
									<td>
										@this.Html.ActionLink("Activar", "Toggle", "User", new { area = "University", id =
								item.Id
								}, new { @class = "btn btn-success mb-3" })
									</td>
								}
								else
								{
									<td>@item.FirstName</td>
									<td>@item.LastName</td>
									<td>@item.Rut</td>
									<td>@item.Email</td>
									<td>
										@this.Html.ActionLink("Editar", "Edit", "User", new { area = "University", id = item.Id
								},
								new { @class = "btn btn-yellow mb-3" })
										@this.Html.ActionLink("Desactivar", "Toggle", "User", new { area = "University", id =
								item.Id }, new { @class = "btn btn-danger mb-3" })
										@if (this.User.IsInRole("Teacher") && this.User.IsInRole("Director"))
										{
											<a asp-action="Teacher" asp-route-sortOrder="@this.ViewData["CurrentSort"]"
									asp-route-pageNumber="@(this.Model.PageIndex)"
									asp-route-currentFilter="@this.ViewData["CurrentFilter"]"
					 class="btn btn-info mb-3">Es director de carrera</a>
										}
										else if (this.User.IsInRole("Teacher"))
										{
											@this.Html.ActionLink("No es director de carrera", "Transfer", "User", new { area =
								"University", currentDirectorTeacherId = this.userManager.GetUserId(this.User),
								newDirectorTeacherId = item.Id }, new { @class = "btn btn-default mb-3" })
										}
									</td>
								}
							</tr>
						}
					</tbody>
				</table>
				@{
					var prevDisabled = !this.Model.HasPreviousPage ? "disabled" : "";
					var nextDisabled = !this.Model.HasNextPage ? "disabled" : "";
				}
				<ul class="pagination mb-0">
					<li class="page-item @prevDisabled">
						<a asp-action="Teacher" asp-route-sortOrder="@this.ViewData["CurrentSort"]"
							asp-route-pageNumber="@(this.Model.PageIndex - 1)"
							asp-route-currentFilter="@this.ViewData["CurrentFilter"]" class="page-link">
							Anterior página
						</a>
					</li>
					@for (var i = 0; i < this.Model.TotalPages; i++)
					{
						<li class="page-item @(i + 1 == this.Model.PageIndex ? " active" : "")">
							<a asp-action="Teacher" asp-route-sortOrder="@this.ViewData["CurrentSort"]"
							asp-route-pageNumber="@(i + 1)" asp-route-currentFilter="@this.ViewData["CurrentFilter"]"
		   class="page-link">
								@(i + 1)
							</a>
						</li>
					}
					<li class="page-item @nextDisabled">
						<a asp-action="Teacher" asp-route-sortOrder="@this.ViewData["CurrentSort"]"
							asp-route-pageNumber="@(this.Model.PageIndex + 1)"
							asp-route-currentFilter="@this.ViewData["CurrentFilter"]" class="page-link">
							Siguiente página
						</a>
					</li>
				</ul>
			</div>
		</div>
	</div>
</div>