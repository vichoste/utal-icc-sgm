@using Utal.Icc.Sgm.ViewModels

@model ApplicationUserViewModel

@{
	this.ViewData["Title"] = "Crear profesor";
}

<div class="container">
	<partial name="_Alerts" />
	<div class="row justify-content-center">
		<div class="col-10">
			<div class="card">
				<div class="card-header text-center">@this.ViewData["Title"]</div>
				<div class="card-body">
					@using (this.Html.BeginForm("CreateTeacher", "User", new { area = "University" })) {
						@this.Html.AntiForgeryToken()
						<div class="row">
							<div class="col">
								<div class="form-group mb-3">
									@this.Html.LabelFor(m => m.FirstName, new { @class = "form-label" })
									@this.Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
									@this.Html.ValidationMessageFor(m => m.FirstName, "Nombre requerido", new { @class = "invalid-feedback" })
								</div>
								<div class="form-group mb-3">
									@this.Html.LabelFor(m => m.LastName, new { @class = "form-label" })
									@this.Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
									@this.Html.ValidationMessageFor(m => m.LastName, "Apellido requerido", new { @class = "invalid-feedback" })
								</div>
								<div class="form-group mb-3">
									@this.Html.LabelFor(m => m.Rut, new { @class = "form-label" })
									@this.Html.TextBoxFor(m => m.Rut, new { @class = "form-control" })
									@this.Html.ValidationMessageFor(m => m.Rut, "RUT requerido", new { @class = "invalid-feedback" })
								</div>
								<div class="form-group mb-3">
									@this.Html.LabelFor(m => m.Email, new { @class = "form-label" })
									@this.Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
									@this.Html.ValidationMessageFor(m => m.Email, "E-mail requerido", new { @class = "invalid-feedback" })
								</div>
								<div class="form-group mb-3">
									@this.Html.LabelFor(m => m.Password, new { @class = "form-label" })
									@this.Html.PasswordFor(m => m.Password, new { @class = "form-control" })
									@this.Html.ValidationMessageFor(m => m.Password, "Contraseña requerida", new { @class = "invalid-feedback" })
								</div>
								<div class="form-group mb-3">
									@this.Html.LabelFor(m => m.ConfirmPassword, new { @class = "form-label" })
									@this.Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
									@this.Html.ValidationMessageFor(m => m.ConfirmPassword, "Confirmación de contraseña requerida", new { @class = "invalid-feedback" })
								</div>
								<p><strong>Roles</strong></p>
								<div class="form-check mb-3">
									@this.Html.LabelFor(m => m.IsGuide, new { @class = "form-check-label" })
									@this.Html.CheckBoxFor(m => m.IsGuide, new { @class = "form-check-input" })
								</div>
								<div class="form-check mb-3">
									@this.Html.LabelFor(m => m.IsAssistant, new { @class = "form-check-label" })
									@this.Html.CheckBoxFor(m => m.IsAssistant, new { @class = "form-check-input" })
								</div>
								<div class="form-check mb-3">
									@this.Html.LabelFor(m => m.IsCourse, new { @class = "form-check-label" })
									@this.Html.CheckBoxFor(m => m.IsCourse, new { @class = "form-check-input" })
								</div>
								<div class="form-check mb-3">
									@this.Html.LabelFor(m => m.IsCommittee, new { @class = "form-check-label" })
									@this.Html.CheckBoxFor(m => m.IsCommittee, new { @class = "form-check-input" })
								</div>
							</div>
						</div>
						<div class="row text-center">
							<div class="col">
								<div class="btn-group">
									@this.Html.ActionLink("Cancelar", "Teachers", "User", new { area = "University" }, new { @class = "btn btn-secondary" })
									<button type="submit" class="btn btn-success">Crear</button>
								</div>
							</div>
						</div>
					}
				</div>
			</div>
		</div>
	</div>
</div>