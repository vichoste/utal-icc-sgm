@using Microsoft.AspNetCore.Identity

@using Utal.Icc.Sgm.Models
@using Utal.Icc.Sgm.ViewModels

@model ApplicationUserViewModel

@inject UserManager<ApplicationUser> _userManager

@{
	if (await this._userManager.IsInRoleAsync((await this._userManager.FindByIdAsync(this.Model.Id!))!, "Student")) {
		this.ViewData["Title"] = this.Model.IsDeactivated is false ? "Desactivar estudiante" : "Activar estudiante";
	}
	if (await this._userManager.IsInRoleAsync((await this._userManager.FindByIdAsync(this.Model.Id!))!, "Teacher")) {
		this.ViewData["Title"] = this.Model.IsDeactivated is false ? "Desactivar profesor" : "Activar profesor";
	}
}

<div class="container">
	<partial name="_Alerts" />
	<div class="card">
		<div class="card-header text-center">@this.ViewData["Title"]</div>
		<div class="card-body text-center">
			@using (this.Html.BeginForm("Toggle", "User", new { area = "University" })) {
				@this.Html.AntiForgeryToken()
				@this.Html.HiddenFor(m => m.Id)
				@if (this.Model.IsDeactivated is false) {
					if (await this._userManager.IsInRoleAsync((await this._userManager.FindByIdAsync(this.Model.Id!))!, "Student")) {
						<h5 class="card-title mb-3">¿Estás seguro que quieres <b class="text-danger">desactivar</b> a este estudiante?</h5>
					}
					if (await this._userManager.IsInRoleAsync((await this._userManager.FindByIdAsync(this.Model.Id!))!, "Teacher")) {
						<h5 class="card-title mb-3">¿Estás seguro que quieres <b class="text-danger">desactivar</b> a este profesor?</h5>
					}
				} else {
					if (await this._userManager.IsInRoleAsync((await this._userManager.FindByIdAsync(this.Model.Id!))!, "Student")) {
						<h5 class="card-title mb-3">¿Estás seguro que quieres <b class="text-success">activar</b> a este estudiante?</h5>
					}
					if (await this._userManager.IsInRoleAsync((await this._userManager.FindByIdAsync(this.Model.Id!))!, "Teacher")) {
						<h5 class="card-title mb-3">¿Estás seguro que quieres <b class="text-success">activar</b> a este profesor?</h5>
					}
				}
				<h6 class="card-subtitle mb-3 text-muted text-center">@this.Html.DisplayFor(m => m.Email)</h6>
				<div>
					@if (await this._userManager.IsInRoleAsync((await this._userManager.FindByIdAsync(this.Model.Id!))!, "Student")) {
						@this.Html.ActionLink("Cancelar", "Students", "User", new { area = "University" }, new { @class = "btn btn-secondary" })
					} else if (await this._userManager.IsInRoleAsync((await this._userManager.FindByIdAsync(this.Model.Id!))!, "Teacher")) {
						@this.Html.ActionLink("Cancelar", "Teachers", "User", new { area = "University" }, new { @class = "btn btn-secondary" })
					}
					@if (this.Model.IsDeactivated is false) {
						<button type="submit" class="btn btn-danger">Desactivar</button>
					} else {
						<button type="submit" class="btn btn-success">Activar</button>
					}
				</div>
			}
		</div>
	</div>
</div>