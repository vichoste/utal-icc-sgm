@using Utal.Icc.Sgm.ViewModels
@using Utal.Icc.Sgm.Areas.GuideTeacher.Controllers

@model ProposalViewModel

@{
	this.ViewData["Title"] = "Ver propuesta";
}

<div class="container">
	<partial name="_Alerts" />
	<div class="row justify-content-center">
		<div class="col-10">
			<div class="card">
				<div class="card-header text-center">@this.ViewData["Title"]</div>
				<div class="card-body">
					<h5 class="card-title text-center"><b class="text-success">Aceptaste</b> esta propuesta. Deberás esperar a que el <b>estudiante</b> <b class="text-success">convierta</b> esta propuesta en solicitud para enviarla al <b>comité</b>.</h5>
					@using (this.Html.BeginForm()) {
						@this.Html.AntiForgeryToken()
						@this.Html.HiddenFor(m => m.Id)
						<div class="row">
							<div class="col">
								<div class="form-group mb-3">
									@this.Html.LabelFor(m => m.Title, new { @class = "form-label" }):
									@this.Html.DisplayFor(m => m.Title, new { @class = "form-control" })
								</div>
								<div class="form-group mb-3">
									@this.Html.LabelFor(m => m.Description, new { @class = "form-label" }):
									@this.Html.DisplayFor(m => m.Description, new { @class = "form-control" })
								</div>
								<div class="form-group mb-3">
									@this.Html.LabelFor(m => m.StudentName, new { @class = "form-label" }):
									@this.Html.DisplayFor(m => m.StudentName, new { @class = "form-control" })
								</div>
								<div class="form-group mb-3">
									@this.Html.LabelFor(m => m.StudentEmail, new { @class = "form-label" }):
									@this.Html.DisplayFor(m => m.StudentEmail, new { @class = "form-control" })
								</div>
								<div class="form-group mb-3">
									@this.Html.LabelFor(m => m.StudentUniversityId, new { @class = "form-label" }):
									@this.Html.DisplayFor(m => m.StudentUniversityId, new { @class = "form-control" })
								</div>
								<div class="form-group mb-3">
									@this.Html.LabelFor(m => m.StudentRemainingCourses, new { @class = "form-label" }):
									@this.Html.DisplayFor(m => m.StudentRemainingCourses, new { @class = "form-control" })
								</div>
								<div class="form-group mb-3">
									@this.Html.LabelFor(m => m.StudentIsDoingThePractice, new { @class = "form-label" }):
									@if (this.Model.StudentIsDoingThePractice is true) {
										<b class="text-info">Sí</b>
									} else {
										<b>No</b>
									}
								</div>
								<div class="form-group mb-3">
									@this.Html.LabelFor(m => m.StudentIsWorking, new { @class = "form-label" }):
									@if (this.Model.StudentIsWorking is true) {
										<b class="text-info">Sí</b>
									} else {
										<b>No</b>
									}
								</div>
								@if (this.Model.AssistantTeachers!.Any()) {
									<div class="form-group mb-3">
										@this.Html.LabelFor(m => m.AssistantTeachers, new { @class = "form-label" }):
										<ul>
											@foreach (var assistantTeacher in this.Model.AssistantTeachers!) {
												<li>@this.Html.DisplayFor(m => assistantTeacher, new { @class = "form-control" })</li>
											}
										</ul>
									</div>
								}
								<hr />
								<div class="form-group mb-3 text-muted">
									@this.Html.LabelFor(m => m.CreatedAt, new { @class = "form-label" }):
									@this.Html.DisplayFor(m => m.CreatedAt, new { @class = "form-control" })
								</div>
								<div class="form-group mb-3 text-muted">
									@this.Html.LabelFor(m => m.UpdatedAt, new { @class = "form-label" }):
									@this.Html.DisplayFor(m => m.UpdatedAt, new { @class = "form-control" })
								</div>
							</div>
						</div>
						<div class="row text-center">
							<div class="col">
								<div class="btn-group">
									@this.Html.ActionLink("Volver", nameof(StudentProposalController.Index), nameof(StudentProposalController).Replace("Controller", string.Empty), new { area = nameof(Utal.Icc.Sgm.Areas.GuideTeacher) }, new { @class = "btn btn-secondary" })
								</div>
							</div>
						</div>
					}
				</div>
			</div>
		</div>
	</div>
</div>