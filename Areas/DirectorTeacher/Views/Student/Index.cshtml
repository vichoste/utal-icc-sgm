@using Utal.Icc.Sgm
@using Utal.Icc.Sgm.Areas.DirectorTeacher.Views.Student
@using Utal.Icc.Sgm.Views.Shared
@using static Utal.Icc.Sgm.Models.ApplicationUser

@model PaginatedList<IndexViewModel>

@{
	this.ViewData["Title"] = "Estudiantes";
}

<div class="container">
	<partial name="_Alerts" />
	<div class="row justify-content-center">
		<div class="col-12 col-md-10 mb-3">
			<h2>@this.ViewData["Title"]</h2>
		</div>
		<div class="col-12 col-md-2 mb-3">
			@this.Html.ActionLink("Importar estudiantes desde CSV", "Create", nameof(Roles.Student), new { area = nameof(Roles.DirectorTeacher) }, new { @class = "btn btn-success"})
		</div>
		<div class="col-12 mb-3">
			<partial name="_Filter" , model=@(new FilterPartialViewModel("Index", nameof(Roles.Student), nameof(Roles.DirectorTeacher))) />
		</div>
	</div>
	<div class="row justify-content-center">
		<div class="col-12">
			<div class="table-responsive">
				@this.Html.HiddenFor(m => m.ApplicationUserId)
				<table class="table table-bordered">
					<thead class="table-dark">
						<tr>
							<th>
								<a asp-action="Index" asp-route-sortOrder="@this.ViewData["FirstNameSortParam"]" asp-route-currentFilter="@this.ViewData["CurrentFilter"]">
									Nombre
								</a>
							</th>
							<th>
								<a asp-action="Index" asp-route-sortOrder="@this.ViewData["LastNameSortParam"]" asp-route-currentFilter="@this.ViewData["CurrentFilter"]">
									Apellido
								</a>
							</th>
							<th>
								<a asp-action="Index" asp-route-sortOrder="@this.ViewData["UniversityIdSortParam"]" asp-route-currentFilter="@this.ViewData["CurrentFilter"]">
									Número de matrícula
								</a>
							</th>
							<th>
								<a asp-action="Index" asp-route-sortOrder="@this.ViewData["RutSortParam"]" asp-route-currentFilter="@this.ViewData["CurrentFilter"]">
									RUT
								</a>
							</th>
							<th>
								<a asp-action="Index" asp-route-sortOrder="@this.ViewData["EmailSortParam"]" asp-route-currentFilter="@this.ViewData["CurrentFilter"]">
									E-mail
								</a>
							</th>
							<th>Acciones</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in this.Model) {
							<tr>
								@if (item.IsDeactivated) {
									<td class="text-muted">@item.FirstName</td>
									<td class="text-muted">@item.LastName</td>
									<td class="text-muted">@item.UniversityId</td>
									<td class="text-muted">@item.Rut</td>
									<td class="text-muted">@item.Email</td>
									<td>
										@this.Html.ActionLink("Activar", "ToggleActivation", nameof(Roles.Student), new { area = nameof(Roles.DirectorTeacher), id = item.Id }, new { @class = "btn btn-success mb-3" })
									</td>
								} else {
									<td>@item.FirstName</td>
									<td>@item.LastName</td>
									<td>@item.UniversityId</td>
									<td>@item.Rut</td>
									<td>@item.Email</td>
									<td>
										@this.Html.ActionLink("Editar", "Edit", nameof(Roles.Student), new { area = nameof(Roles.DirectorTeacher), id = item.Id }, new { @class = "btn btn-yellow mb-3" })
										@this.Html.ActionLink("Desactivar", "ToggleActivation", nameof(Roles.Student), new { area = nameof(Roles.DirectorTeacher), id = item.Id }, new { @class = "btn btn-danger mb-3" })
									</td>
								}
							</tr>
						}
					</tbody>
				</table>
				@{
					var prevDisabled = !this.Model.HasPreviousPage ? "disabled" : "";
					var nextDisabled = !this.Model.HasNextPage ? "disabled" : "";
				}
				<ul class="pagination mb-0">
					<li class="page-item @prevDisabled">
						<a asp-action="Index" asp-route-sortOrder="@this.ViewData["CurrentSort"]" asp-route-pageNumber="@(this.Model.PageIndex - 1)" asp-route-currentFilter="@this.ViewData["CurrentFilter"]" class="page-link">
							Anterior página
						</a>
					</li>
					@for (var i = 0; i < this.Model.TotalPages; i++) {
						<li class="page-item @(i + 1 == this.Model.PageIndex ? " active" : "")">
							<a asp-action="Index" asp-route-sortOrder="@this.ViewData["CurrentSort"]" asp-route-pageNumber="@(i + 1)" asp-route-currentFilter="@this.ViewData["CurrentFilter"]" class="page-link">
								@(i + 1)
							</a>
						</li>
					}
					<li class="page-item @nextDisabled">
						<a asp-action="Index" asp-route-sortOrder="@this.ViewData["CurrentSort"]" asp-route-pageNumber="@(this.Model.PageIndex + 1)" asp-route-currentFilter="@this.ViewData["CurrentFilter"]" class="page-link">
							Siguiente página
						</a>
					</li>
				</ul>
			</div>
		</div>
	</div>
</div>